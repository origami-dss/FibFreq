% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/freq_Lorentz_fit.R
\name{freq_Lorentz_fit}
\alias{freq_Lorentz_fit}
\title{Frequency Estimation Using a Lorentz Fit to the Amplitude Spectrum}
\usage{
freq_Lorentz_fit(
  x,
  delta_t = 1,
  welch_window = FALSE,
  f_min = 0,
  f_max = Inf,
  control = stats::nls.control(scaleOffset = 1),
  algorithm = "plinear"
)
}
\arguments{
\item{x}{real valued array containing the values of the time series}

\item{delta_t}{a positive real value, the sampling time, default value is delta_t = 1.0}

\item{welch_window}{if TRUE, the time series will be multiplied with a Welch window before Fourier transform}

\item{f_min}{a positive real value, the lower bound of the considered frequency interval}

\item{f_max}{a positive real value, the upper bound of the considered frequency interval}

\item{control}{an optional list of control settings for the nonlinear least-squares algorithm (i.e., the function nls).
See \link[stats]{nls.control} for the names of the settable control values and their effect.}

\item{algorithm}{character string specifying the algorithm to use. The default is "plinear".  See   \link[stats]{nls} for other options.}
}
\value{
a named list containing the following components:
\itemize{
\item \code{freq_Lorentz} - the  center of the fitted Lorentzian.
\item \code{scale_Lorentz} - the scale parameter of the fitted Lorentzian.
\item \code{max_Lorentz_fit} - the  maximum value of the fitted Lorentzian.
\item \code{expl_var} -  the  explained variance of the fitted Lorentzian.
\item \code{Lorentz_model} -  a named list with the amplitude spectrum and the fitted model.
}
}
\description{
This function is fitting a Lorentz function to the amplitudes of the Fourier transform (not to the Power spectrum!) of a time series.
}
\examples{
# Let's consider two synthetic time series and an example from the attached data set
x1 = sin(0.11 * 2*pi *(1:100))
x2 = sin(0.11 * 2*pi *(1:100)) + 1.01 * sin(0.17 * 2*pi * (1:100))
ecg_6  <- MiceFibECGs[,6]

freq_Lorentz_fit(x1)
# For the following few examples we will focus on the fitted parameters and the explained variance
freq_Lorentz_fit(x2)[1:4]
# Welch windowing can change the Lorentz fit
freq_Lorentz_fit(x2, welch_window = TRUE)[1:4]
# A narrower (i.e., too narrow) frequency interval is changing the estimated
# frequency and the explained variance
freq_Lorentz_fit(x2, f_min = 0.02, f_max = 0.15, welch_window = TRUE)[1:4]

# In case of bandpass filtered times series, the frequency range
# for the Lorentz fit should be contained in the frequency range of the signal.
res <- freq_Lorentz_fit(ecg_6, delta_t = 0.001, f_min = 1, f_max = 45)
res[1:2]


# Vizualization of the fitted Lorentz model:
xlab = "Frequency (Hz)"
ylab = "Fourier Amplitude"
plot(res$Lorentz_model$freq, res$Lorentz_model$FourierAmp, xlab = xlab, ylab = ylab, pch = 3)
lines(res$Lorentz_model$freq, res$Lorentz_model$LorentzFit, col = "red")

legend("topright" , c("Fourier Amplitudes", "Lorentz Fit"),
col = c("black","red"), lty = c(0,1), pch = c(3,NA))

}
\references{
{ Diaz-Maue L, Witt A, Nobach H: \emph{Unraveling Cardiac Arrhythmia Frequency, Comparative Analysis Using Time and Frequency Domain Algorithms}. submitted to Frontiers in Signal Processing (2025)}
}
